# FLIGHTGEAR SIMULATION
This program was created in Advance Programing course in Bar-Ilan University,
on 2020.


# AUTHORS
   - Reut Berger (reutbrgr@gmail.com)
   - Eden Simony (shimone5@macs.biu.ac.il)


# INTRODUCTION
The project has been written on CLion environment, in C++.
We worked together on the project and we learned a lot about how to use
Client-Server connections and threads.


# DESCRIPTION
The project connects to the simulator and make the airplane fly with
the commands in fly.txt file. We lexer and parser the commands in the file
and send the values to the simulator. In addition, we get runtime flight
parameters from the simulator and update our data.

We use hash maps to get the values in o(1). The keys of the maps are the vars
name or the path of the values.  
We also use threads to:
   - listen to the simulator updates of the flight parameters and update
     our variables
   - update the simulator with new values to control the plane

We also support while loops and if conditions.


# RUN PROJECT
   - Download FlightGear simulator from [here]:
     https://www.flightgear.org/download/

   - In folder data/Protocol, add file generic_small.xml, which contains
     a list of runtime flight parameters updated periodically by the simulator
     
   - Launch FlightGear and add the following lines to Advanced Settings:
     --telnet=socket,in,10,127.0.0.1,5402,tcp 
     --generic=socket,out,10,127.0.0.1,5400,tcp,generic_small

   - Compile the project in terminal (on linux) with command:
     g++ -std=c++14 *.cpp -Wall -Wextra -Wshadow -Wnon-virtual-dtor -pedantic -o a.out -pthread

   - Run the out file with command:
     ./a.out fly.txt

   - Click the "Fly" button on the flight simulator screen.


- Download FlightGear Simulator:
  https://www.flightgear.org/download/
